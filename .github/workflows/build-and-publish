name: Build and Publish Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}

  test:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for image to be available
        run: sleep 30

      - name: Test Docker image
        run: |
          # Pull the newly built image
          docker pull ghcr.io/${{ github.repository }}:latest
          
          # Run container
          docker run -d \
            --name wiki-test \
            -p 3000:3000 \
            -e WIKI_USERNAME=testuser \
            -e WIKI_PASSWORD=testpass123 \
            -e JWT_SECRET=test-secret-key \
            ghcr.io/${{ github.repository }}:latest
          
          # Wait for container to be ready
          echo "Waiting for container to be ready..."
          for i in {1..30}; do
            if curl -f http://localhost:3000/api/health 2>/dev/null; then
              echo "Container is healthy!"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done
          
          # Test health endpoint
          curl -f http://localhost:3000/api/health || exit 1
          
          # Clean up
          docker stop wiki-test
          docker rm wiki-test
          
          echo "Docker image test passed!"
